import java.util.ArrayList;
import java.util.Stack;

public class PackageStack {
    private final int CAPACITY = 7;
    private Stack<Package> stackOfPackages = new Stack();
    private Package stackFinal;
    int counter=0;

    /**
     * pushes a package on to a stack
     * @param x
     * @throws FullStackException
     */
    public void push(Package x) throws FullStackException {
        if (stackOfPackages.equals(CAPACITY)) {
            throw new FullStackException();
        } else {
            stackOfPackages.push(x);
            counter++;
        }
    }

    /**
     * removes a package from a stack
     * @return
     * @throws EmptyStackException
     */
    public Package pop() throws EmptyStackException {
        if (stackOfPackages.empty()) {
            throw new EmptyStackException();
        } else {
            counter--;
            return stackOfPackages.pop();
        }
    }

    /**
     * allows the user to see the first element on the stack
     * @return
     * @throws EmptyStackException
     */
    public Package peek() throws EmptyStackException {
        if (stackOfPackages.empty()) {
            throw new EmptyStackException();
        } else {
            stackOfPackages.peek();
        }
        return peek();
    }

    /**
     * keeps track if the stack if full
     * @return
     */
    public boolean isFull() {
        if (counter == CAPACITY) {
            return true;
        } else {
            return false;
        }
    }

    /**
     * checks if the stack is empty
     * @return
     */
    public boolean isEmpty() {
        if (counter==0) {
            return true;
        } else {
            return false;
        }
    }

    /**
     * to string method for printing
     * @return
     */
    public String toString() {

        String retVal = "";
        ArrayList<Package> store = new ArrayList<Package>();
        while (!stackOfPackages.isEmpty()) {
            Package temp =  stackOfPackages.pop();

            retVal += " [" + temp.getRecipient() + "] arrival date:" + temp.getArrivalDate() +
                    " weight: " + temp.getWeight();
            store.add(temp);
        }
        for(int i=0;i<store.size();i++){
            stackOfPackages.push(store.get(i));
        }
        return retVal;
    }
}
